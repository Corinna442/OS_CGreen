#!/bin/bash

var1=$1
var2=$2

#Create User guide
user_guide() {
	echo "Task Tracker User Guide:"
	echo "Usage: ./tt [add, complete, view, clear, help] [task description]"
	echo "Here are the actions: "
	echo "add : Adds a task. Needs a task description."
	echo "complete : Will mark a task as complete. This also needs a task description"
	echo "view : View all tasks"
	echo "clear : Clears all tasks"
	echo "help : Displays this user guide"
}

#first function for add
add_task() {


	if [[ -z "$1" ]]; then
		read -p "Enter a description: " taskDescription
	else
		taskDescription="$var1"
	fi

	task="$var2"

#taking the output to the .task file
echo "$task" >> "/home/ubuntu/.tasks"
echo "Task added: $task"
}
#Complete function
complete_task(){

	if [[ -z "$var1" ]]; then
                echo "Error: no task description for complete."
		read -p "Enter the task description you want to complete: " taskDescription
	else
		taskDescription="$var1"
	fi

	taskDescription="$(echo "$taskDescription" | xargs)"
	#remove task from .tasks file
	if grep -Fxq "$taskDescription" "/home/ubuntu/.tasks"; then
	       	sed -i.bak "/^${taskDescription}$/d" "/home/ubuntu/.tasks"
		echo "Task completed"
	else
		echo "Task not found"
	fi
}

#View function
view_task(){
if [[ -f "/home/ubuntu/.tasks" ]]; then
	echo "Here are your tasks: "
	cat "/home/ubuntu/.tasks"
else
	echo "Tasks not found"
fi
}

#View clear
clear_task(){
	
	read -p "Do you want to remove all tasks? (enter y / n): " char1
	if [[ "$char1" == "y" ]]; then
		rm -f "/home/ubuntu/.tasks"
		echo "Tasks have been cleared."
	elif [[ "$char1" == "n" ]]; then
		echo "Cancelled clear action"
	else
		echo "Please enter a valid input"
	fi
}

#Check if the first argument is given
if [ -z "$var1" ]; then
	echo "Invalid argument"
	user_guide
	exit 1
fi

case "$var1" in
	add)
		add_task "$var2"
		;;
	complete)
		complete_task "$var2"
                ;;
	view)
		view_task
		;;
	clear)
		clear_task
		;;
	help)
		user_guide
		;;
	*)
		echo "Invalid argument"
		user_guide
		;;
esac

