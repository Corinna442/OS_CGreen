#!/bin/bash

var1=$1
var2=$2

#Create User guide
user_guide() {
	echo "***Task Tracker User Guide***"
	echo "Usage: ./tt [add, complete, view, clear, help] [task description]"
	echo "Here are the actions: "
	echo "add: Adds a task. Needs a task description."
	echo "complete: Will mark a task as complete. This also needs a task description."
	echo "view: View all tasks."
	echo "clear: Clears all tasks."
	echo "help: Displays this user guide."
}

#first function for add
add_task() {


	if [[ -z "$1" ]]; then
		read -p "Enter a description: " taskDescription
	else
		taskDescription="$var1"
	fi

	task="$var2"

#taking the output to the .task file
echo "$task" >> "$HOME/.tasks"
echo "Task added"
}

#Complete function
complete_task(){
      if [[ -z "$1" ]]; then
        echo "Error: Must provide task description"
        read -p "Enter the task description to complete: " taskDescription
    else
        taskDescription="$1"
    fi

    # Remove task from .tasks
    if grep -Fxq "$taskDescription" "$HOME/.tasks"; then
        sed -i "/^${taskDescription}$/d" "$HOME/.tasks"
        echo "Task completed"
    else
        echo "Task not found"
    fi
}

#View function
view_task(){
if [[ -f "$HOME/.tasks" ]]; then
	echo "Here are your tasks: "
	cat "$HOME/.tasks"
else
	echo "Tasks not found"
fi
}

#Clear function
clear_task(){
	
	read -p "Do you want to remove all tasks? (enter y / n): " char1
	if [[ "$char1" == "y" ]]; then
		rm -f "$HOME/.tasks"
		echo "Tasks have been cleared."
	elif [[ "$char1" == "n" ]]; then
		echo "Cancelled clear action"
	else
		echo "Please enter a valid input"
	fi
}

#Check if the first argument is given
if [ -z "$var1" ]; then
	echo "Invalid argument"
	user_guide
	exit 1
fi

case "$var1" in
	add)
		add_task "$var2"
		;;
	complete)
		complete_task "$var2"
                ;;
	view)
		view_task
		;;
	clear)
		clear_task
		;;
	help)
		user_guide
		;;
	super-show)
		echo "Showing tasks from every user: "
		find /home -name ".tasks" | while read -r files; do
		echo "Tasks in the file: "
		cat "$files"
		echo ""
	done
	;;
	*)
		echo "Invalid argument"
		user_guide
		;;
esac

